name: deploy dev

on:
  push:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      VUE_APP_WEB_COGNITO_USER_POOL_CLIENT_ID: ${{ secrets.VUE_APP_WEB_COGNITO_USER_POOL_CLIENT_ID }}
      VUE_APP_USER_POOL_ID: ${{ secrets.VUE_APP_USER_POOL_ID }}
      VUE_APP_AWS_REGION: ${{ secrets.VUE_APP_AWS_REGION }}
      VUE_APP_AWS_APPSYNC_GRAPHQL_ENDPOINT: ${{ secrets.VUE_APP_AWS_APPSYNC_GRAPHQL_ENDPOINT }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # https://github.com/actions/setup-node
    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: npm ci
      run: npm ci

    # TODO: tests

    - name: npm run build
      run: npm run build

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/

  terraform-apply:
    runs-on: ubuntu-latest

    env:
      TF_VAR_s3bucket_name: ${{ secrets.S3BUCKET_NAME }}

    steps:
    - uses: actions/checkout@v2
    # https://github.com/hashicorp/setup-terraform
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.3

    - name: Configure AWS credentials from ci-user account
    # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 1200
        role-session-name: ci_user
        role-skip-session-tagging: true

    - name: terraform init
      run: |
        cd terraform
        terraform init

    - name: terraform apply
      run: |
        cd terraform
        terraform apply -auto-approve

  deploy:
    needs: [build, terraform-apply]
    runs-on: ubuntu-latest

    env:
      S3BUCKET_NAME: ${{ secrets.S3BUCKET_NAME }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/

    - name: Configure AWS credentials from ci-user account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 1200
        role-session-name: ci_user
        role-skip-session-tagging: true

    - name: upload to S3
      run: |
        cd dist
        aws s3 sync . s3://$S3BUCKET_NAME --delete --cache-control max-age=31536000,public --exclude index.html --acl public-read
        aws s3 cp index.html s3://$S3BUCKET_NAME/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read
        